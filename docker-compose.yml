x-app: &app
  build:
    context: .dockerdev
    dockerfile: Dockerfile
    args:
      RUBY_VERSION: '3.3.6'
      PG_MAJOR: 17
      BUNDLER_VERSION: '2.5.0'
      NODE_MAJOR: 20
      YARN_VERSION: '1.22.22'
  environment: &env
    NODE_ENV: ${NODE_ENV:-development}
    RAILS_ENV: ${RAILS_ENV:-development}
    YARN_CACHE_FOLDER: /app/node_modules/.yarn-cache
  image: lightning-rails:1.0.0
  platform: linux/x86_64
  tmpfs:
    - /tmp
    - /app/tmp/pids

x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true
  volumes:
    - .:/app:cached
    - rails_cache:/app/tmp/cache
    - bundle:/usr/local/bundle
    - .dockerdev/.psqlrc:/root/.psqlrc:ro
    - .dockerdev/.bashrc:/root/.bashrc:ro
    - .dockerdev/.irbrc:/root/.irbrc:ro
    - node_modules:/app/node_modules
  environment:
    <<: *env
    NODE_ENV: development
    REDIS_URL: redis://redis:6379/
    DATABASE_URL: postgres://postgres:postgres@postgres:5432
    BOOTSNAP_CACHE_DIR: /usr/local/bundle/_bootsnap
    XDG_DATA_HOME: /app/tmp/cache
    WEB_CONCURRENCY: 1
    HISTFILE: /app/log/.bash_history
    PSQL_HISTFILE: /app/log/.psql_history
    EDITOR: vi
    CHROME_URL: http://chrome:3333
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  runner:
    <<: *backend
    command: /bin/bash
    ports:
      - '3000:3000'

  rails:
    <<: *backend
    command: bundle exec rails server -b 0.0.0.0
    ports:
      - '3000:3000'

  css:
    <<: *backend
    command: bundle exec rails tailwindcss:watch

  js:
    <<: *backend
    command: yarn build --watch

  sidekiq:
    <<: *backend
    command: bundle exec sidekiq -C config/sidekiq.yml

  postgres:
    image: postgres:17
    volumes:
      - .dockerdev/.psqlrc:/root/.psqlrc:ro
      - postgres:/var/lib/postgresql/data
      - ./log:/root/log:cached
    environment:
      PSQL_HISTFILE: /root/log/.psql_history
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

  redis:
    image: redis:6.2-alpine
    volumes:
      - redis:/data
    ports:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

  chrome:
    image: browserless/chrome:latest
    ports:
      - 3333:3333
    volumes:
      - .:/app:cached
    environment:
      # By default, it uses 3000, which is typically used by Rails.
      PORT: 3333
      # Set connection timeout to avoid timeout exception during debugging
      # https://docs.browserless.io/docs/docker.html#connection-timeout
      CONNECTION_TIMEOUT: 6000000

volumes:
  postgres:
  redis:
  bundle:
  rails_cache:
  node_modules:
