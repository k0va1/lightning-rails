version: '2.4'

x-app: &app
  build:
    context: .dockerdev
    dockerfile: Dockerfile
    args:
      RUBY_VERSION: '3.2.2'
      PG_MAJOR: '13'
      BUNDLER_VERSION: '2.4.10'
      NODE_MAJOR: '14'
      YARN_VERSION: '1.22.15'
  environment: &env
    NODE_ENV: ${NODE_ENV:-development}
    RAILS_ENV: ${RAILS_ENV:-development}
    YARN_CACHE_FOLDER: /app/node_modules/.yarn-cache
  env_file:
    - .env.dev
  image: rails_turbo_template:1.0.0
  tmpfs:
    - /tmp

x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true
  volumes:
    - .:/app:cached
    - rails_cache:/app/tmp/cache
    - bundle:/usr/local/bundle
    - .dockerdev/.psqlrc:/root/.psqlrc:ro
    - .dockerdev/.bashrc:/root/.bashrc:ro
    - .dockerdev/.pryrc:/app/.pryrc:ro
    - node_modules:/app/node_modules
  environment:
    <<: *env
    REDIS_URL: redis://redis:6379/
    DATABASE_URL: postgres://postgres:postgres@postgres:5432
    BOOTSNAP_CACHE_DIR: /usr/local/bundle/_bootsnap
    WEB_CONCURRENCY: 1
    NODE_ENV: development
    HISTFILE: /app/log/.bash_history
    PSQL_HISTFILE: /app/log/.psql_history
    EDITOR: vi
    ANYCABLE_REDIS_URL: redis://redis:6379/0
    ANYCABLE_RPC_HOST: 0.0.0.0:50051
    ANYCABLE_DEBUG: 1
  env_file:
    - .env
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy
#   ws:
#     condition: service_started

services:
  runner:
    <<: *backend
    command: /bin/bash
    ports:
      - '3000:3000'

  server:
    <<: *backend
    command: bin/dev
    ports:
      - '3000:3000'

  sidekiq:
    <<: *backend
    command: bundle exec sidekiq -C config/sidekiq.yml

  postgres:
    image: postgres:13.0
    volumes:
      - .dockerdev/.psqlrc:/root/.psqlrc:ro
      - postgres:/var/lib/postgresql/data
      - ./log:/root/log:cached
    environment:
      PSQL_HISTFILE: /root/log/.psql_history
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

  redis:
    image: redis:6.2-alpine
    volumes:
      - redis:/data
    ports:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

# Uncomment if you need anycable
#   ws:
#     image: anycable/anycable-go:1.2
#     ports:
#       - '8080:8080'
#     environment:
#       ANYCABLE_HOST: "0.0.0.0"
#       ANYCABLE_REDIS_URL: redis://redis:6379/0
#       ANYCABLE_RPC_HOST: anycable:50051
#       ANYCABLE_DEBUG: 1
#     depends_on:
#       redis:
#         condition: service_healthy
#
#   anycable:
#     <<: *backend
#     command: bundle exec anycable
#     environment:
#       <<: *env
#       ANYCABLE_REDIS_URL: redis://redis:6379/0
#       ANYCABLE_RPC_HOST: 0.0.0.0:50051
#       ANYCABLE_DEBUG: 1
#     ports:
#       - '50051'
#     depends_on:
#       ws:
#         condition: service_started
#    image: anycable/anycable-go

volumes:
  postgres:
  redis:
  bundle:
  rails_cache:
  node_modules:
